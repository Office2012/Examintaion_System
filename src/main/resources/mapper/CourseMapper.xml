<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.system.dao.CourseMapper" >
  <resultMap id="BaseResultMap" type="com.system.model.Course" >
    <constructor >
      <idArg column="course_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="course_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="teacher_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="course_time" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="course_year" jdbcType="DATE" javaType="java.util.Date" />
      <arg column="course_classoom" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="course_ period" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="course_type" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="college_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="course_score" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="course_videourl" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    course_id, course_name, teacher_id, course_time, course_year, course_classoom, "course_ period", 
    course_type, college_id, course_score, course_videourl
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.system.model.CourseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from course
    where course_id = #{courseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from course
    where course_id = #{courseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.system.model.CourseExample" >
    delete from course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.system.model.Course" >
    insert into course (course_id, course_name, teacher_id, 
      course_time, course_year, course_classoom, 
      "course_ period", course_type, college_id, 
      course_score, course_videourl)
    values (#{courseId,jdbcType=INTEGER}, #{courseName,jdbcType=VARCHAR}, #{teacherId,jdbcType=INTEGER}, 
      #{courseTime,jdbcType=VARCHAR}, #{courseYear,jdbcType=DATE}, #{courseClassoom,jdbcType=VARCHAR}, 
      #{coursePeriod,jdbcType=INTEGER}, #{courseType,jdbcType=VARCHAR}, #{collegeId,jdbcType=INTEGER}, 
      #{courseScore,jdbcType=INTEGER}, #{courseVideourl,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.system.model.Course" >
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="courseName != null" >
        course_name,
      </if>
      <if test="teacherId != null" >
        teacher_id,
      </if>
      <if test="courseTime != null" >
        course_time,
      </if>
      <if test="courseYear != null" >
        course_year,
      </if>
      <if test="courseClassoom != null" >
        course_classoom,
      </if>
      <if test="coursePeriod != null" >
        "course_ period",
      </if>
      <if test="courseType != null" >
        course_type,
      </if>
      <if test="collegeId != null" >
        college_id,
      </if>
      <if test="courseScore != null" >
        course_score,
      </if>
      <if test="courseVideourl != null" >
        course_videourl,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="courseId != null" >
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="courseName != null" >
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null" >
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="courseTime != null" >
        #{courseTime,jdbcType=VARCHAR},
      </if>
      <if test="courseYear != null" >
        #{courseYear,jdbcType=DATE},
      </if>
      <if test="courseClassoom != null" >
        #{courseClassoom,jdbcType=VARCHAR},
      </if>
      <if test="coursePeriod != null" >
        #{coursePeriod,jdbcType=INTEGER},
      </if>
      <if test="courseType != null" >
        #{courseType,jdbcType=VARCHAR},
      </if>
      <if test="collegeId != null" >
        #{collegeId,jdbcType=INTEGER},
      </if>
      <if test="courseScore != null" >
        #{courseScore,jdbcType=INTEGER},
      </if>
      <if test="courseVideourl != null" >
        #{courseVideourl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.system.model.CourseExample" resultType="java.lang.Integer" >
    select count(*) from course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update course
    <set >
      <if test="record.courseId != null" >
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.courseName != null" >
        course_name = #{record.courseName,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherId != null" >
        teacher_id = #{record.teacherId,jdbcType=INTEGER},
      </if>
      <if test="record.courseTime != null" >
        course_time = #{record.courseTime,jdbcType=VARCHAR},
      </if>
      <if test="record.courseYear != null" >
        course_year = #{record.courseYear,jdbcType=DATE},
      </if>
      <if test="record.courseClassoom != null" >
        course_classoom = #{record.courseClassoom,jdbcType=VARCHAR},
      </if>
      <if test="record.coursePeriod != null" >
        "course_ period" = #{record.coursePeriod,jdbcType=INTEGER},
      </if>
      <if test="record.courseType != null" >
        course_type = #{record.courseType,jdbcType=VARCHAR},
      </if>
      <if test="record.collegeId != null" >
        college_id = #{record.collegeId,jdbcType=INTEGER},
      </if>
      <if test="record.courseScore != null" >
        course_score = #{record.courseScore,jdbcType=INTEGER},
      </if>
      <if test="record.courseVideourl != null" >
        course_videourl = #{record.courseVideourl,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update course
    set course_id = #{record.courseId,jdbcType=INTEGER},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      teacher_id = #{record.teacherId,jdbcType=INTEGER},
      course_time = #{record.courseTime,jdbcType=VARCHAR},
      course_year = #{record.courseYear,jdbcType=DATE},
      course_classoom = #{record.courseClassoom,jdbcType=VARCHAR},
      "course_ period" = #{record.coursePeriod,jdbcType=INTEGER},
      course_type = #{record.courseType,jdbcType=VARCHAR},
      college_id = #{record.collegeId,jdbcType=INTEGER},
      course_score = #{record.courseScore,jdbcType=INTEGER},
      course_videourl = #{record.courseVideourl,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.system.model.Course" >
    update course
    <set >
      <if test="courseName != null" >
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null" >
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="courseTime != null" >
        course_time = #{courseTime,jdbcType=VARCHAR},
      </if>
      <if test="courseYear != null" >
        course_year = #{courseYear,jdbcType=DATE},
      </if>
      <if test="courseClassoom != null" >
        course_classoom = #{courseClassoom,jdbcType=VARCHAR},
      </if>
      <if test="coursePeriod != null" >
        "course_ period" = #{coursePeriod,jdbcType=INTEGER},
      </if>
      <if test="courseType != null" >
        course_type = #{courseType,jdbcType=VARCHAR},
      </if>
      <if test="collegeId != null" >
        college_id = #{collegeId,jdbcType=INTEGER},
      </if>
      <if test="courseScore != null" >
        course_score = #{courseScore,jdbcType=INTEGER},
      </if>
      <if test="courseVideourl != null" >
        course_videourl = #{courseVideourl,jdbcType=VARCHAR},
      </if>
    </set>
    where course_id = #{courseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.system.model.Course" >
    update course
    set course_name = #{courseName,jdbcType=VARCHAR},
      teacher_id = #{teacherId,jdbcType=INTEGER},
      course_time = #{courseTime,jdbcType=VARCHAR},
      course_year = #{courseYear,jdbcType=DATE},
      course_classoom = #{courseClassoom,jdbcType=VARCHAR},
      "course_ period" = #{coursePeriod,jdbcType=INTEGER},
      course_type = #{courseType,jdbcType=VARCHAR},
      college_id = #{collegeId,jdbcType=INTEGER},
      course_score = #{courseScore,jdbcType=INTEGER},
      course_videourl = #{courseVideourl,jdbcType=VARCHAR}
    where course_id = #{courseId,jdbcType=INTEGER}
  </update>
</mapper>